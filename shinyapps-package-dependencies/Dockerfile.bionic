FROM openanalytics/r-base
#FROM ubuntu:bionic
MAINTAINER Thirupathi Peraboina <thirupathiperaboina@gmail.com>

# update apt & install packages
RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    build-essential \
    curl \
    git \
    gnupg \
    libboost-all-dev \
    libcurl4-openssl-dev \
    locales \
    lsb-release \
    moreutils \
    openssh-client \
    protobuf-compiler \
    sudo && \
    rm -rf /var/lib/apt/lists/*

# add R apt repository
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9 && \
    echo "deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/" >> /etc/apt/sources.list.d/cran-rstudio.list

# Ensure FreeTDS is added to unixodbc upon installation
RUN echo tdsodbc freetds/addtoodbc boolean true | debconf-set-selections

# Install libraries & database related packages separately to break up the layers
RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    jags \
    libatlas3-base \
    libcairo2 \
    libcairo2-dev \
    libfftw3-dev \
    libgdal-dev \
    libgraphviz-dev \
    libgsl0-dev \
    libmysqlclient-dev \
    libnetcdf-dev \
    libprocps-dev \
    libproj-dev \
    libprotoc-dev \
    libquantlib0-dev \
    libsasl2-dev \
    libsqliteodbc \
    libxml2-dev \
    libxt-dev \
    libxt6 \
    odbc-postgresql \
    tdsodbc \
    unixodbc \
    unixodbc-dev \
    wget && \
    rm -rf /var/lib/apt/lists/*

# Note: myodbc is not available for bionic: https://launchpad.net/myodbc
RUN cd /tmp && \
    wget -q https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz && \
    tar zxf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz && \
    cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/bin/* /usr/local/bin && \
    cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/lib/* /usr/local/lib && \
    myodbc-installer -a -d -n "MySQL" -t "Driver=/usr/local/lib/libmyodbc8w.so" && \
    myodbc-installer -a -d -n "MySQL ODBC 8.0 Driver" -t "Driver=/usr/local/lib/libmyodbc8w.so" && \
    rm -rf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit*

# Install JDK and Cargo separately to avoid the recommended packages
RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive \
    apt-get install -y default-jdk cargo && \
    apt-get -y install default-jre && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python-dev \
    python-pip \
    python-virtualenv

# Install Julia
RUN wget -q https://julialang-s3.julialang.org/bin/linux/x64/1.0/julia-1.0.2-linux-x86_64.tar.gz && \
    tar -C /usr/local -zxf julia-1.0.2-linux-x86_64.tar.gz && \
    ln -s /usr/local/julia-1.0.2/bin/julia /usr/local/bin/julia && \
    rm julia-1.0.2-linux-x86_64.tar.gz

# Install texlive separately, in three parts, because it is so large.

# First install some non-texlive packages which are recommended but will be skipped when we install texlive
# in order to not install the documentation.
#
# biber depends on libwww-perl which has a tree of recommended packages
# texlive-base depends on xdg-utils which has a tree of recommended packages
# texinfo depends upon libxml-libxml-perl which has a tree of recommended packages
RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    libfile-homedir-perl \
    libwww-perl \
    libxml-libxml-perl \
    libyaml-tiny-perl \
    ruby \
    tcl \
    tex-gyre \
    tk \
    xdg-utils \
    xzdec && \
    rm -rf /var/lib/apt/lists/*

# First part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation
RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    texlive \
    texlive-fonts-extra \
    texlive-generic-recommended && \
    rm -rf /var/lib/apt/lists/*

# Second part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation
RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    biber \
    lmodern \
    prosper \
    ps2eps \
    texinfo \
    texlive-bibtex-extra \
    texlive-extra-utils \
    texlive-font-utils \
    texlive-generic-extra \
    texlive-lang-arabic \
    texlive-latex-extra \
    texlive-luatex \
    texlive-pstricks \
    texlive-xetex && \
    rm -rf /var/lib/apt/lists/*

RUN wget https://github.com/jgm/pandoc/releases/download/2.3.1/pandoc-2.3.1-1-amd64.deb && \
    dpkg -i pandoc-2.3.1-1-amd64.deb && \
    rm pandoc-2.3.1-1-amd64.deb

# Set default locale
RUN update-locale --reset LANG=C.UTF-8

# set UTF-8
RUN echo "LANG=C.UTF-8" >> /usr/lib/R/etc/Renviron.site

RUN apt-get update && apt-get install -y \
    sudo \
    pandoc \
    pandoc-citeproc \
    libcurl4-gnutls-dev \
    libcairo2-dev \
    libxt-dev \
    libssl-dev \
    libssh2-1-dev \
    libssl1.0.0 \
    libxml2-dev \
    libmariadb-client-lgpl-dev \
    texlive-full \
    libmariadbclient-dev \
    libmagick++-dev \
  	libudunits2-dev \
  	libtesseract-dev \
  	libleptonica-dev
    

RUN apt-get update && apt-get install -y software-properties-common
RUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable
RUN add-apt-repository ppa:marutter/c2d4u3.5

RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    libquantlib0* \
    r-base-core \
    r-cran-rjava \
    equivs

RUN sudo apt update
RUN sudo apt-get install -y openscenegraph-plugin-osgearth libosgearth-dev
RUN sudo apt-get install -y libudunits2-dev libgeos-dev libproj-dev gdal-bin
#RUN sudo apt install libgdal26 gdal-bin python-gdal python3-gdal

#RUN echo "deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/  " >> /etc/apt/sources.list
#RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9

RUN apt-get update
RUN apt-get upgrade -y

RUN export DEBIAN_FRONTEND=noninteractive; apt-get -y update \
 && apt-get install -y \
	libcurl4-openssl-dev \
	qpdf \
	pandoc \
	make \
	wget \
	default-libmysqlclient-dev \
	libmysqlclient-dev \
	git \
	libgdal-dev \
	libgeos-dev \
	libproj-dev \
	liblwgeom-dev \
	libudunits2-dev \
	postgis \
	r-base-dev \
	libavfilter-dev \
	jq

RUN apt-get install -y libv8-3.14-dev \
        libprotobuf-dev \
        protobuf-compiler \
        libcairo2-dev

RUN apt-get install -y texinfo \
       texlive-base \
       texlive-extra-utils \
       texlive-fonts-extra \
       texlive-fonts-recommended \
       texlive-generic-recommended \
       texlive-latex-base \
       texlive-latex-extra \
       texlive-latex-recommended

# stuff for the tmaptools/rmapshaper/geojsonio etc stack:
RUN add-apt-repository -y ppa:cran/poppler
#RUN add-apt-repository -y ppa:opencpu/jq
RUN apt-get update
RUN apt-get install -y libjq-dev \
      libpoppler-cpp-dev \
      tesseract-ocr-eng \
      libsodium-dev
      
RUN R CMD javareconf

RUN Rscript -e "install.packages(c('sf', 'lwgeom', 'covr', 'raster', 'forecast', 'lattice', 'sp'), dependencies = TRUE)"
RUN R -e "install.packages(c('KernSmooth', 'mapview', 'raster', 'rgdal', 'rgeos', 'sp', 'spatstat', 'stars', 'tmap', 'classInt'), dependencies = TRUE)"
RUN git clone   https://github.com/r-spatial/sf.git
RUN R CMD build --no-build-vignettes sf
RUN R CMD INSTALL sf_*tar.gz

RUN apt-get install -y pandoc pandoc-citeproc
RUN R -e "install.packages(c('mapview', 'raster', 'rgdal', 'rgeos', 'sp', 'spatstat', 'tmap'), dependencies = TRUE)"
#RUN R CMD check --as-cran sf_*tar.gz


# basic shiny functionality

RUN R -e "install.packages(c('shiny', 'shinycssloaders', 'dplyr', 'jpeg', 'pracma', 'data.table', 'DT', 'shinyjs', 'shinyBS'), dependencies = TRUE)"

RUN R -e "install.packages(c('shiny', 'tsibble', 'visdat', 'RcolorBrewer', 'zip', 'imputeTS', 'ggrepel', 'auth0', 'tidyverse', 'shinydashboard', 'dplyr', 'shinyjs', 'DT', 'RMariaDB', 'glue', 'stringi', 'lubridate', 'DBI', 'shinyalert', 'shinythemes', 'shinycssloaders', 'plotly', 'shinyWidgets', 'RVerbalExpressions', 'tidypredict', 'dygraphs', 'grid', 'gt', 'ggtext', 'openxlsx', 'shinyjs', 'formattable', 'ggridges', 'patchwork', 'janitor', 'xts', 'RMariaDB', 'aws.s3'), dependencies = TRUE)"
RUN R -e "install.packages(c('ggiraph', 'slider', 'webshot', 'kableExtra', 'xtable', 'huxtable', 'rmarkdown', 'gridExtra', 'magick', 'ggplot2'), dependencies = TRUE)"

RUN R -e "install.packages(c('fitdistrplus', 'foreach', 'shinycustomloader', 'schoolmath', 'rWind', 'hablar', 'naniar', 'grid', 'cowplot', 'googlesheets4', 'googledrive', 'circular', 'rdrop2', 'repmis', 'zoo', 'geosphere'), dependencies = TRUE)"

RUN R -e "install.packages(c('hms','devtools','remotes'), dependencies = TRUE)"

RUN R -e "install.packages(c('rio', 'sjmisc' , 'RColorBrewer', 'flextable'), dependencies = TRUE)"

RUN R -e "install.packages(c('rio', 'sjmisc' , 'RColorBrewer', 'flextable', 'xts', 'zoo', 'ggmap', 'evaluate', 'session', 'sf', 'ggsn'), dependencies = TRUE)"

RUN R -e "install.packages(c('pdftools', 'survival', 'fitdistrplus', 'outliers','rJava', 'tabulizerjars', 'tabulizer', 'slackr', 'rintrojs', 'mapboxapi'), dependencies = TRUE)"

RUN R -e "install.packages(c('Matrix', 'tabulizer', 'slackr', 'rintrojs', 'mapboxapi', 'shinyEx'), repos='http://cran.rstudio.com/')"

RUN R -e "install.packages(c('rWind', 'Matrix', 'fitdistrplus', 'survival', 'santoku', 'tabulizer', 'slackr', 'rintrojs'), dependencies = TRUE)"

RUN R -e "remotes::install_github('walkerke/mapboxapi')"
RUN R -e "remotes::install_github('yusuzech/shinyEx')"

RUN R -e "install.packages(c('Matrix', 'survival', 'fitdistrplus', 'outliers'), repos='http://cran.rstudio.com/')"


#RUN R -e "install.packages('https://cran.r-project.org/src/contrib/Archive/DT/DT_0.14.tar.gz', repos=NULL, type='source')"

COPY Rprofile.site /usr/lib/R/etc/

CMD ["R"]

